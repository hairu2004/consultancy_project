{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport * as Core from \"../core.mjs\";\nexport class Files extends APIResource {\n  /**\n   * Upload a file that can be used across various endpoints.\n   *\n   * The Batch API only supports `.jsonl` files up to 100 MB in size. The input also\n   * has a specific required [format](/docs/batch).\n   *\n   * Please contact us if you need to increase these storage limits.\n   */\n  create(body, options) {\n    return this._client.post('/openai/v1/files', Core.multipartFormRequestOptions({\n      body,\n      ...options\n    }));\n  }\n  /**\n   * Returns a list of files.\n   */\n  list(options) {\n    return this._client.get('/openai/v1/files', options);\n  }\n  /**\n   * Delete a file.\n   */\n  delete(fileId, options) {\n    return this._client.delete(`/openai/v1/files/${fileId}`, options);\n  }\n  /**\n   * Returns the contents of the specified file.\n   */\n  content(fileId, options) {\n    return this._client.get(`/openai/v1/files/${fileId}/content`, {\n      ...options,\n      headers: {\n        Accept: 'application/octet-stream',\n        ...options?.headers\n      },\n      __binaryResponse: true\n    });\n  }\n  /**\n   * Returns information about a file.\n   */\n  info(fileId, options) {\n    return this._client.get(`/openai/v1/files/${fileId}`, options);\n  }\n}","map":{"version":3,"names":["APIResource","Core","Files","create","body","options","_client","post","multipartFormRequestOptions","list","get","delete","fileId","content","headers","Accept","__binaryResponse","info"],"sources":["D:\\KEC\\sem6\\consultancy_project\\qa-automation-system - Copy\\client\\node_modules\\groq-sdk\\src\\resources\\files.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\nimport { type Response } from '../_shims/index';\n\nexport class Files extends APIResource {\n  /**\n   * Upload a file that can be used across various endpoints.\n   *\n   * The Batch API only supports `.jsonl` files up to 100 MB in size. The input also\n   * has a specific required [format](/docs/batch).\n   *\n   * Please contact us if you need to increase these storage limits.\n   */\n  create(body: FileCreateParams, options?: Core.RequestOptions): Core.APIPromise<FileCreateResponse> {\n    return this._client.post('/openai/v1/files', Core.multipartFormRequestOptions({ body, ...options }));\n  }\n\n  /**\n   * Returns a list of files.\n   */\n  list(options?: Core.RequestOptions): Core.APIPromise<FileListResponse> {\n    return this._client.get('/openai/v1/files', options);\n  }\n\n  /**\n   * Delete a file.\n   */\n  delete(fileId: string, options?: Core.RequestOptions): Core.APIPromise<FileDeleteResponse> {\n    return this._client.delete(`/openai/v1/files/${fileId}`, options);\n  }\n\n  /**\n   * Returns the contents of the specified file.\n   */\n  content(fileId: string, options?: Core.RequestOptions): Core.APIPromise<Response> {\n    return this._client.get(`/openai/v1/files/${fileId}/content`, {\n      ...options,\n      headers: { Accept: 'application/octet-stream', ...options?.headers },\n      __binaryResponse: true,\n    });\n  }\n\n  /**\n   * Returns information about a file.\n   */\n  info(fileId: string, options?: Core.RequestOptions): Core.APIPromise<FileInfoResponse> {\n    return this._client.get(`/openai/v1/files/${fileId}`, options);\n  }\n}\n\n/**\n * The `File` object represents a document that has been uploaded.\n */\nexport interface FileCreateResponse {\n  /**\n   * The file identifier, which can be referenced in the API endpoints.\n   */\n  id?: string;\n\n  /**\n   * The size of the file, in bytes.\n   */\n  bytes?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the file was created.\n   */\n  created_at?: number;\n\n  /**\n   * The name of the file.\n   */\n  filename?: string;\n\n  /**\n   * The object type, which is always `file`.\n   */\n  object?: 'file';\n\n  /**\n   * The intended purpose of the file. Supported values are `batch`, and\n   * `batch_output`.\n   */\n  purpose?: 'batch' | 'batch_output';\n}\n\nexport interface FileListResponse {\n  data: Array<FileListResponse.Data>;\n\n  object: 'list';\n}\n\nexport namespace FileListResponse {\n  /**\n   * The `File` object represents a document that has been uploaded.\n   */\n  export interface Data {\n    /**\n     * The file identifier, which can be referenced in the API endpoints.\n     */\n    id?: string;\n\n    /**\n     * The size of the file, in bytes.\n     */\n    bytes?: number;\n\n    /**\n     * The Unix timestamp (in seconds) for when the file was created.\n     */\n    created_at?: number;\n\n    /**\n     * The name of the file.\n     */\n    filename?: string;\n\n    /**\n     * The object type, which is always `file`.\n     */\n    object?: 'file';\n\n    /**\n     * The intended purpose of the file. Supported values are `batch`, and\n     * `batch_output`.\n     */\n    purpose?: 'batch' | 'batch_output';\n  }\n}\n\nexport interface FileDeleteResponse {\n  id: string;\n\n  deleted: boolean;\n\n  object: 'file';\n}\n\n/**\n * The `File` object represents a document that has been uploaded.\n */\nexport interface FileInfoResponse {\n  /**\n   * The file identifier, which can be referenced in the API endpoints.\n   */\n  id?: string;\n\n  /**\n   * The size of the file, in bytes.\n   */\n  bytes?: number;\n\n  /**\n   * The Unix timestamp (in seconds) for when the file was created.\n   */\n  created_at?: number;\n\n  /**\n   * The name of the file.\n   */\n  filename?: string;\n\n  /**\n   * The object type, which is always `file`.\n   */\n  object?: 'file';\n\n  /**\n   * The intended purpose of the file. Supported values are `batch`, and\n   * `batch_output`.\n   */\n  purpose?: 'batch' | 'batch_output';\n}\n\nexport interface FileCreateParams {\n  /**\n   * The File object (not file name) to be uploaded.\n   */\n  file: Core.Uploadable;\n\n  /**\n   * The intended purpose of the uploaded file. Use \"batch\" for\n   * [Batch API](/docs/api-reference#batches).\n   */\n  purpose: 'batch';\n}\n\nexport declare namespace Files {\n  export {\n    type FileCreateResponse as FileCreateResponse,\n    type FileListResponse as FileListResponse,\n    type FileDeleteResponse as FileDeleteResponse,\n    type FileInfoResponse as FileInfoResponse,\n    type FileCreateParams as FileCreateParams,\n  };\n}\n"],"mappings":"AAAA;SAESA,WAAW,QAAE;OACf,KAAKC,IAAI;AAGhB,OAAM,MAAOC,KAAM,SAAQF,WAAW;EACpC;;;;;;;;EAQAG,MAAMA,CAACC,IAAsB,EAAEC,OAA6B;IAC1D,OAAO,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,kBAAkB,EAAEN,IAAI,CAACO,2BAA2B,CAAC;MAAEJ,IAAI;MAAE,GAAGC;IAAO,CAAE,CAAC,CAAC;EACtG;EAEA;;;EAGAI,IAAIA,CAACJ,OAA6B;IAChC,OAAO,IAAI,CAACC,OAAO,CAACI,GAAG,CAAC,kBAAkB,EAAEL,OAAO,CAAC;EACtD;EAEA;;;EAGAM,MAAMA,CAACC,MAAc,EAAEP,OAA6B;IAClD,OAAO,IAAI,CAACC,OAAO,CAACK,MAAM,CAAC,oBAAoBC,MAAM,EAAE,EAAEP,OAAO,CAAC;EACnE;EAEA;;;EAGAQ,OAAOA,CAACD,MAAc,EAAEP,OAA6B;IACnD,OAAO,IAAI,CAACC,OAAO,CAACI,GAAG,CAAC,oBAAoBE,MAAM,UAAU,EAAE;MAC5D,GAAGP,OAAO;MACVS,OAAO,EAAE;QAAEC,MAAM,EAAE,0BAA0B;QAAE,GAAGV,OAAO,EAAES;MAAO,CAAE;MACpEE,gBAAgB,EAAE;KACnB,CAAC;EACJ;EAEA;;;EAGAC,IAAIA,CAACL,MAAc,EAAEP,OAA6B;IAChD,OAAO,IAAI,CAACC,OAAO,CAACI,GAAG,CAAC,oBAAoBE,MAAM,EAAE,EAAEP,OAAO,CAAC;EAChE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}